docker-compose.prod.yml

services:
  web:
    image: flask-redis-app:${IMAGE_TAG}
    ports:
      - "8088:8088"
    command: gunicorn app:app --bind 0.0.0.0:8088
    environment:
      - FLASK_ENV=production
    depends_on:
      - redis
      - mysql
    networks:
      - devnet
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    networks:
      - devnet
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpass123
      MYSQL_DATABASE: app_db
      MYSQL_USER: app_user
      MYSQL_PASSWORD: app_pass123
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - devnet
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    ports:
      - "8082:8082"
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - web
    networks:
      - devnet
    restart: always

networks:
  devnet:
    driver: bridge

volumes:
  redis_data:
  mysql_data:

