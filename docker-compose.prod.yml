version: '3'

services:
  web:
    build: .
    ports:
      - "8087:8088"  # Flask listens on 8088 internally, mapped externally to 8087
    command: gunicorn app:app --bind 0.0.0.0:8088  # Production WSGI server
    environment:
      - FLASK_ENV=production
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - devnet

  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: always
    networks:
      - devnet

  nginx:
    image: nginx:alpine
    ports:
      - "8082:8082"  # Expose production app on port 8082 instead of 80
    volumes:
      - ./nginx/prod.conf:/etc/nginx/conf.d/default.conf  # Use separate Nginx config for prod
      - ./certbot/www:/var/www/certbot
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - web
    restart: always
    networks:
      - devnet

networks:
  devnet:
    driver: bridge

volumes:
  redis_data:

