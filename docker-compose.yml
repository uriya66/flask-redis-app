version: '3'

services:
  web:
    build: .  # Build the Flask app from the Dockerfile
    ports:
      - "8088:8088"  # Expose Flask on port 8088
    depends_on:
      - redis  # Wait for Redis before starting Flask
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088"]  # Check if Flask responds
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - devnet  # Connect to the internal dev network

  redis:
    image: redis:alpine  # Lightweight official Redis image
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]  # Ping Redis server to check health
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - devnet

  nginx:
    image: nginx:alpine  # Lightweight official Nginx image
    ports:
      - "80:80"  # Expose Nginx on standard HTTP port
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # Load custom Nginx config
    depends_on:
      - web  # Wait for Flask before starting Nginx
    networks:
      - devnet

networks:
  devnet:
    driver: bridge  # Bridge network for container-to-container communication

